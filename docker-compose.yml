version: '3.3'

services:
  # django core app
  web:
    container_name: web_innotter
    build:
      context: ./core
    restart: on-failure
    env_file:
      - .env
    ports:
      - '8000:8000'
    volumes:
      - ./core:/code
    depends_on:
      - postgres
      - redis

  # database
  postgres:
    container_name: postgres_innotter
    image: postgres:12-alpine
    restart: always
    environment:
      POSTGRES_HOST: ${DB_HOST}
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - '30000:5432'

  # statistic microservice
  statistic_service:
    container_name: statistic_service_innotter
    build:
      context: ./statistic_microservice
    env_file:
      - .env
    volumes:
      - ./statistic_microservice/:/app/
    expose:
      - '8001'
    ports:
      - '8001:8000'
    depends_on:
      - localstack

  # local dynamodb and s3
  localstack:
    container_name: localstack_main
    image: localstack/localstack
    restart: on-failure
    ports:
      - "4566:4566"
    environment:
      - SERVICES=dynamodb, s3, ses
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_DEFAULT_REGION=${AWS_DEFAULT_REGION}
      - DEFAULT_REGION=${AWS_DEFAULT_REGION}
      - DATA_DIR=${LOCALSTACK_DATA_DIR:-/tmp/localstack/data}
      - DOCKER_HOST=unix:///var/run/docker.sock
    volumes:
      - ./localstack:/tmp/localstack
      - "/var/run/docker.sock:/var/run/docker.sock"

  # redis
  redis:
    container_name: redis_innotter
    image: redis:6.2-alpine
